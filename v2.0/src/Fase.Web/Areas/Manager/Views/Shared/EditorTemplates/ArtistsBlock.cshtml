@model Fase.Web.Models.Blocks.ArtistsBlock
@using Fase.Web.Extensions
@{
    var blockUnique = "Block_" + Guid.NewGuid();
    var imageUnique = "Image_" + Guid.NewGuid();
}

<div id="@(blockUnique)_Preview" class="@Model.GetCssClass()">
    <div class="manager-block" data-property-label="@Html.DisplayNameFor(m => m.SubHeading)">
        @Html.HiddenFor(m => m.SubHeading.Value, "")
        <h3 class="text-block__heading2 editor-area" contenteditable="true" data-id="@Html.FieldIdFor(m => m.SubHeading)">
            @if (!string.IsNullOrEmpty(Model.SubHeading.Value))
            {
            @Model.SubHeading
            }
            else
            {
            <text></text>
            }
        </h3>
    </div>

    <div class="manager-block" data-property-label="@Html.DisplayNameFor(m => m.Heading)">
        @Html.HiddenFor(m => m.Heading.Value, "")
        <h2 class="text-block__heading editor-area" contenteditable="true" data-id="@Html.FieldIdFor(m => m.Heading)">
            @if (!string.IsNullOrEmpty(Model.Heading.Value))
            {
            @Model.Heading
            }
            else
            {
            <text></text>
            }
        </h2>
    </div>

    <div class="manager-block" data-property-label="@Html.DisplayNameFor(m => m.Text)">
        @Html.HiddenFor(m => m.Text.Value, "")
        <div id="Editor_@Guid.NewGuid()" class="text-block__content block-editor content-preview editor-area @(!string.IsNullOrWhiteSpace(Model.Text.Value) ? "empty" : "check-empty")" data-id="@Html.FieldIdFor(m => m.Text)">
            @if (!string.IsNullOrWhiteSpace(Model.Text.Value))
            {
            @Html.Raw(Model.Text.Value)
            }
            else
            {
            <p></p>
            }
        </div>
    </div>

    <div class="block-image text-block__content">
        <img id="@(imageUnique)_Preview" src="@(Model.Image.Media != null ? Url.Content(Model.Image.Media.PublicUrl) : "/manager/assets/img/block-img-placeholder.png")">
        <div class="block-image-picker">
            <div class="row">
                <div class="col-xs-9">
                    @Html.HiddenFor(m => m.Image.Id)
                    <div class="well well-sm">
                        <a id="@(imageUnique)_Filename" href="#" data-toggle="modal">
                            @if (Model.Image.Media != null)
                            {
                            @Model.Image.Media.Filename
                            }
                            else
                            {
                            <text></text>
                            }
                        </a>
                    </div>
                </div>
                <div class="col-xs-3">
                    <div class="btn-group btn-group-justified" role="group">
                        <div class="btn-group" role="group" style="padding-right:5px">
                            <button class="btn btn-primary text-center" type="button" data-toggle="modal" data-target="#modalMedia" data-filter="image" data-mediaid="@Html.FieldIdFor(m => m.Image, "Id")" data-medianame="@(imageUnique)_Filename" data-mediaurlid="@(imageUnique)_Preview">
                                <span class="fas fa-plus"></span>
                            </button>
                        </div>
                        <div class="btn-group" role="group" style="padding-left:5px">
                            <button class="btn btn-danger text-center btn-media-clear" type="button" data-mediaid="@Html.FieldIdFor(m => m.Image, "Id")" data-medianame="@(imageUnique)_Filename" data-mediaurlid="@(imageUnique)_Preview">
                                <span class="fas fa-times"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label>@Html.DisplayNameFor(m => m.CssClass)</label>
        @Html.EditorFor(m => m.CssClass)
    </div>

    <div class="form-group">
        <label>@Html.DisplayNameFor(m => m.ArtistsPage)</label>
        @Html.EditorFor(m => m.ArtistsPage)
    </div>
</div>